{
  "version": 3,
  "sources": ["../../../src/app/routes/login.tsx", "../../../src/app/ui/login/login.view.tsx"],
  "sourcesContent": ["import type {\n  LoaderFunction,\n  ActionFunction,\n  V2_MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { User } from \"@domain/user\";\nimport { getUsers } from \"@infrastructure/db/user\";\nimport { getUserSession } from \"@app/session-storage\";\nimport { LoginView } from \"@app/ui/login\";\nimport { formatTags, formatProperties } from \"@utils/meta\";\n\nexport const meta: V2_MetaFunction = () => {\n  const title = \"Jira clone - Login\";\n  const description =\n    \"Select your user profile and login to see your projects.\";\n  const image = \"https://jira-clone.fly.dev/static/images/readme/projects.png\";\n  const url = \"https://jira-clone.fly.dev/login\";\n\n  const tags = {\n    charset: \"utf-8\",\n    viewport: \"width=device-width,initial-scale=1\",\n    title: title,\n    description: description,\n    \"twitter:card\": \"summary_large_image\",\n    \"twitter:site\": url,\n    \"twitter:domain\": \"jira-clone.fly.dev\",\n    \"twitter:title\": title,\n    \"twitter:description\": description,\n    \"twitter:image\": image,\n    \"twitter:image:width\": \"1297\",\n    \"twitter:image:height\": \"635\",\n    \"twitter:image:alt\": title,\n    \"twitter:creator\": \"@Jack_DanielSG\",\n    \"twitter:creator:id\": \"Jack_DanielSG\",\n  };\n\n  const properties = {\n    \"og:url\": url,\n    \"og:type\": \"website\",\n    \"og:site_name\": title,\n    \"og:title\": title,\n    \"og:description\": description,\n    \"og:image\": image,\n  };\n\n  return [{ title }, ...formatTags(tags), ...formatProperties(properties)];\n};\n\ntype LoaderData = {\n  users: User[];\n};\n\nexport const loader: LoaderFunction = async () => {\n  const users = await getUsers();\n  return json<LoaderData>({ users });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const _action = formData.get(\"_action\") as string;\n\n  if (_action === \"setUser\") {\n    const userId = formData.get(\"user\") as string;\n    const userSession = await getUserSession(request);\n    userSession.setUser(userId);\n\n    return redirect(\"/projects\", {\n      headers: { \"Set-Cookie\": await userSession.commit() },\n    });\n  }\n  console.error(\"Unknown action\", _action);\n};\n\nexport default function LoginRoute() {\n  const { users } = useLoaderData<LoaderData>();\n  return <LoginView users={users} />;\n}\n", "import { useState } from \"react\";\nimport { Form } from \"@remix-run/react\";\nimport { User, UserId, userMock1 } from \"@domain/user\";\nimport { Button } from \"@app/components/button\";\nimport { UserAvatar } from \"@app/components/user-avatar\";\nimport * as Select from \"@app/components/select\";\n\nexport const LoginView = ({ users }: Props) => {\n  const [selectedValue, setSelectedValue] = useState<User>(userMock1);\n\n  const onValueChange = (userId: UserId) => {\n    const foundUser = users.find((user) => user.id === userId);\n\n    if (foundUser) {\n      setSelectedValue(foundUser);\n    }\n  };\n\n  return (\n    <div className=\"mx-auto max-w-[400px] pt-[10vh]\">\n      <h1 className=\"font-primary-black text-5xl text-font\">\n        Select login user\n      </h1>\n      <h2 className=\"mb-8 mt-3 font-primary-light text-lg text-font-subtle\">\n        There is no authentication involved. You can login with any user you\n        want! Keep in mind you can only access the projects the user is member\n        of. Try to create issues and comments with different users to see how it\n        reflects in the UI and database. You can logout on the user avatar.\n      </h2>\n      <Form method=\"post\" className=\"mx-auto w-[300px]\">\n        <Select.Root\n          name=\"user\"\n          defaultValue={userMock1.id}\n          onValueChange={onValueChange}\n        >\n          <Select.Trigger\n            className=\"flex w-full justify-between\"\n            aria-label=\"Open user select\"\n          >\n            <div className=\"flex items-center gap-2\">\n              <UserAvatar {...selectedValue} />\n              <Select.Value />\n            </div>\n            <Select.TriggerIcon />\n          </Select.Trigger>\n          <Select.Content>\n            <Select.ScrollUpButton />\n            <Select.Viewport>\n              {users.map((user, index) => (\n                <Select.Item key={index} value={user.id}>\n                  <Select.ItemIndicator />\n                  <UserAvatar {...user} />\n                  <Select.ItemText>{user.name}</Select.ItemText>\n                </Select.Item>\n              ))}\n              <Select.Separator />\n            </Select.Viewport>\n            <Select.ScrollDownButton />\n          </Select.Content>\n        </Select.Root>\n        <Button\n          type=\"submit\"\n          name=\"_action\"\n          value=\"setUser\"\n          aria-label=\"Login\"\n          className=\"mt-2 w-full\"\n        >\n          Login\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\ninterface Props {\n  users: User[];\n}\n"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime"]
}
